name: Delete Review App

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write
  deployments: write
  id-token: write

jobs:
  delete-review-app:
    name: Delete Review App ${{ github.event.pull_request.number }}
    environment: review
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: contains(github.event.pull_request.labels.*.name, 'deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: google-github-actions/auth@v2
        with:
          project_id: teaching-qualifications
          workload_identity_provider: projects/708780292301/locations/global/workloadIdentityPools/check-childrens-barred-list/providers/check-childrens-barred-list

      - name: Set Environment variables
        run: |
          terraform_version=$(awk '/{/{f=/^terraform/;next}f' terraform/aks/terraform.tf | grep -o [0-9\.]*)
          PR_NUMBER=${{ github.event.pull_request.number }}
          TF_STATE_FILE=pr-$PR_NUMBER.tfstate
          echo "DEPLOY_ENV=review-$PR_NUMBER" >> $GITHUB_ENV
          echo "APP_NAME=pr-$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "TF_STATE_FILE=$TF_STATE_FILE" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=$terraform_version" >> $GITHUB_ENV
          pr_state_file=$(az storage blob list -c terraform-state \
           --account-name "s189t01ccbltfstatervsa" \
           --prefix $TF_STATE_FILE --query "[].name" -o tsv)
          if [ ! -z "$pr_state_file" ]; then echo "TF_STATE_EXISTS=true" >> $GITHUB_ENV; fi;

      - name: Use Terraform ${{ env.TERRAFORM_VERSION }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
        if: env.TF_STATE_EXISTS == 'true'
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform destroy
        if: env.TF_STATE_EXISTS == 'true'
        run: make review ci terraform-destroy

      - name: Delete tf state file
        if: env.TF_STATE_EXISTS == 'true'
        run: |
          az storage blob delete -c terraform-state --name ${{ env.TF_STATE_FILE }} \
          --account-name "s189t01ccbltfstatervsa"

      - name: Update ${{ matrix.environment }} status
        id: deactivate-env
        if: ${{ always() && env.TF_STATE_EXISTS == 'true' }}
        uses: bobheadxi/deployments@v1
        with:
          step: deactivate-env
          token: ${{ secrets.GITHUB_TOKEN }}
          env: review-${{ env.PR_NUMBER }}
